description <http://smolang.org/dtdw/processTwo#> as processTwo {
	uses <http://smolang.org/dtdw#> as dtdw
	uses <http://www.w3.org/2001/XMLSchema#> as xsd
	uses  <http://w3id.org/pko#> as pko 
	uses <http://purl.org/net/p-plan#> as p-plan 
	uses <http://www.w3.org/ns/prov#> as prov 
    uses <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    
	/* Mikkel Methodology */
  /* Data/Models */
  instance avg_flow_rate_data : dtdw:DataVariable [
    dtdw:availableIn "service/avg_flow_rate.csv"^^xsd:string
    dtdw:executedAt 0 //?
  ]

  instance avg_flow_rate_plot : dtdw:DataVariable [
    dtdw:availableIn "service/avg_flow_rate_plot.pdf"^^xsd:string
    dtdw:executedAt 0
  ]

  instance state_machine_model : dtdw:ModelVariable [
    dtdw:availableIn "service/state_machine_model.pickle"^^xsd:string
    dtdw:executedAt 0
  ]

  instance state_machine_parameters : dtdw:DataVariable [
    dtdw:availableIn "service/state_machine_parameters.json"^^xsd:string
    dtdw:executedAt 0
  ]

  instance state_machine_validity_plot : dtdw:DataVariable [
    dtdw:availableIn "service/state_machine_validity_plot.pdf"^^xsd:string
    dtdw:executedAt 0
  ]

  instance dt_service_model : dtdw:ModelVariable [
    dtdw:availableIn "service/dt_service_model.pickle"^^xsd:string
    dtdw:executedAt 0
  ]

  instance dt_service_validity_plot : dtdw:DataVariable [
    dtdw:availableIn "service/dt_service_validity_plot.pdf"^^xsd:string
    dtdw:executedAt 0
  ]

  instance network_error_metrics_plot : dtdw:DataVariable [
    dtdw:availableIn "service/network_error_metrics_plot.pdf"^^xsd:string
    dtdw:executedAt 0
  ]

  instance network_latency_metrics_plot : dtdw:DataVariable [
    dtdw:availableIn "service/network_latency_metrics_plot.pdf"^^xsd:string
    dtdw:executedAt 0
  ]

  instance network_error_data : dtdw:DataVariable [
    dtdw:availableIn "service/network_error.csv"^^xsd:string
    dtdw:executedAt 0
  ]

  instance network_latency_data : dtdw:DataVariable [
    dtdw:availableIn "service/network_latency.csv"^^xsd:string
    dtdw:executedAt 0
  ]

  instance anomaly_signal_data : dtdw:DataVariable [
    dtdw:availableIn "service/anomaly_signal.csv"^^xsd:string
    dtdw:executedAt 0
  ]

  /* Steps */
  instance process_flow_rate : dtdw:LoadStep [
    dtdw:produces avg_flow_rate_data
    dtdw:order 1
  ]

  instance plot_flow_rate : dtdw:SimulateStep [
    dtdw:consumes avg_flow_rate_data
    dtdw:produces avg_flow_rate_plot
    dtdw:order 2
  ]

  instance prototype_state_machine : dtdw:SimulateStep [
    dtdw:consumes avg_flow_rate_plot
    dtdw:produces state_machine_model
    dtdw:order 3
  ]

  instance calibrate_state_machine : dtdw:SimulateStep [
    dtdw:consumes avg_flow_rate_data
    dtdw:consumes state_machine_model
    dtdw:produces state_machine_parameters
    dtdw:order 4
  ]

  instance validate_state_machine : dtdw:SimulateStep [
    dtdw:consumes avg_flow_rate_data
    dtdw:consumes state_machine_model
    dtdw:consumes state_machine_parameters
    dtdw:consumes state_machine_validity_plot
    dtdw:order 5
  ]

  instance emqx_component : dtdw:SimulateStep [
    dtdw:consumes state_machine_model
    dtdw:consumes state_machine_parameters
    dtdw:produces dt_service_model
    dtdw:order 6
  ]

  instance test_dt_service : dtdw:SimulateStep [
    dtdw:consumes avg_flow_rate_data
    dtdw:consumes dt_service_model
    dtdw:produces anomaly_signal_data
    dtdw:order 7
  ]

  instance validate_dt_service : dtdw:SimulateStep [
    dtdw:consumes anomaly_signal_data
    dtdw:consumes dt_service_model
    dtdw:produces dt_service_validity_plot
    dtdw:order 8
  ]

  instance benchmark_network_error : dtdw:SimulateStep [
    dtdw:consumes network_error_data
    dtdw:consumes dt_service_model
    dtdw:produces network_error_metrics_plot
    dtdw:order 9
  ]

  instance benchmark_network_latency : dtdw:SimulateStep [
    dtdw:consumes network_latency_data
    dtdw:consumes dt_service_model
    dtdw:produces network_latency_metrics_plot
    dtdw:order 10
  ]

  instance MikkelServiceProcess : dtdw:Process [
    dtdw:firstStep process_flow_rate
    dtdw:hasStep plot_flow_rate
    dtdw:hasStep prototype_state_machine
    dtdw:hasStep calibrate_state_machine
    dtdw:hasStep validate_state_machine
    dtdw:hasStep emqx_component
    dtdw:hasStep test_dt_service
    dtdw:hasStep validate_dt_service
    dtdw:hasStep benchmark_network_error
    dtdw:hasStep benchmark_network_latency
  ]
}